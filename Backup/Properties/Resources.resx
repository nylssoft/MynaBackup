<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BUTTON_APPLY_EXCLUDEPATTERN" xml:space="preserve">
    <value>A_pply</value>
  </data>
  <data name="BUTTON_APPLY_INCLUDEPATTERN" xml:space="preserve">
    <value>_Apply</value>
  </data>
  <data name="BUTTON_CANCEL" xml:space="preserve">
    <value>_Cancel</value>
  </data>
  <data name="BUTTON_CLEAR" xml:space="preserve">
    <value>_Clear</value>
  </data>
  <data name="BUTTON_OK" xml:space="preserve">
    <value>_OK</value>
  </data>
  <data name="BUTTON_SELECT" xml:space="preserve">
    <value>Se_lect...</value>
  </data>
  <data name="CMD_ABOUT" xml:space="preserve">
    <value>_About</value>
  </data>
  <data name="CMD_ADD_DESTINATION_DIRECTORY" xml:space="preserve">
    <value>Add des_tination directory...</value>
  </data>
  <data name="CMD_ADD_SOURCE_DIRECTORY" xml:space="preserve">
    <value>Add source files from di_rectory...</value>
  </data>
  <data name="CMD_ADD_SOURCE_FILE" xml:space="preserve">
    <value>_Add source file...</value>
  </data>
  <data name="CMD_BACKUP" xml:space="preserve">
    <value>_Perform backup</value>
  </data>
  <data name="CMD_CLOSE" xml:space="preserve">
    <value>_Close</value>
  </data>
  <data name="CMD_CREATE_BACKUP_COLLECTION" xml:space="preserve">
    <value>_Create new backup...</value>
  </data>
  <data name="CMD_DELETE_BACKUP_COLLECTION" xml:space="preserve">
    <value>_Delete backup...</value>
  </data>
  <data name="CMD_EXIT" xml:space="preserve">
    <value>_Exit</value>
  </data>
  <data name="CMD_REFRESH" xml:space="preserve">
    <value>_Refresh</value>
  </data>
  <data name="CMD_REMOVE_DESTINATION_DIRECTORY" xml:space="preserve">
    <value>Remove _destination directory</value>
  </data>
  <data name="CMD_REMOVE_SOURCE_FILE" xml:space="preserve">
    <value>R_emove source file</value>
  </data>
  <data name="CMD_RENAME_BACKUP_COLLECTION" xml:space="preserve">
    <value>_Rename backup...</value>
  </data>
  <data name="CMD_SETTINGS" xml:space="preserve">
    <value>_Settings...</value>
  </data>
  <data name="CMD_SHOW_OVERVIEW" xml:space="preserve">
    <value>Show _Overview...</value>
  </data>
  <data name="COLUMN_BACKUP" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="COLUMN_BACKUP_FINISHED" xml:space="preserve">
    <value>Backup finished</value>
  </data>
  <data name="COLUMN_BACKUP_STARTED" xml:space="preserve">
    <value>Backup started</value>
  </data>
  <data name="COLUMN_COPIED_FILES" xml:space="preserve">
    <value>Copied files</value>
  </data>
  <data name="COLUMN_COPY_ERRORS" xml:space="preserve">
    <value>Copy errors</value>
  </data>
  <data name="COLUMN_DIRECTORY_PATH" xml:space="preserve">
    <value>Directory path</value>
  </data>
  <data name="COLUMN_ERROR_MESSAGE" xml:space="preserve">
    <value>Error message</value>
  </data>
  <data name="COLUMN_FILEPATH" xml:space="preserve">
    <value>File path</value>
  </data>
  <data name="COLUMN_FILESIZE" xml:space="preserve">
    <value>File size</value>
  </data>
  <data name="COLUMN_FINISHED" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="COLUMN_LAST_MODIFIED" xml:space="preserve">
    <value>Last modified</value>
  </data>
  <data name="COLUMN_NEXT" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="COLUMN_SOURCE_FILE_PATH" xml:space="preserve">
    <value>Source file path</value>
  </data>
  <data name="LABEL_AUTOMATIC_BACKUP" xml:space="preserve">
    <value>Automatic backup:</value>
  </data>
  <data name="LABEL_BACKUP_COLLECTION" xml:space="preserve">
    <value>_Backup:</value>
  </data>
  <data name="LABEL_DESTINATION_DIRECTORIES" xml:space="preserve">
    <value>Des_tination directories:</value>
  </data>
  <data name="LABEL_EXCLUDE_PATTERN" xml:space="preserve">
    <value>E_xclude pattern:</value>
  </data>
  <data name="LABEL_FINISHED_AT" xml:space="preserve">
    <value>Finished at:</value>
  </data>
  <data name="LABEL_INCLUDE_PATTERN" xml:space="preserve">
    <value>_Include pattern:</value>
  </data>
  <data name="LABEL_LANGUAGE" xml:space="preserve">
    <value>_Language:</value>
  </data>
  <data name="LABEL_LAST_BACKUP" xml:space="preserve">
    <value>Last backup:</value>
  </data>
  <data name="LABEL_MINIMIZE_ON_STARTUP" xml:space="preserve">
    <value>_Minimize window on startup:</value>
  </data>
  <data name="LABEL_NAME" xml:space="preserve">
    <value>_Name:</value>
  </data>
  <data name="LABEL_NEXT_BACKUP_AT" xml:space="preserve">
    <value>Next backup at:</value>
  </data>
  <data name="LABEL_SOURCE_DIRECTORY" xml:space="preserve">
    <value>Source directory:</value>
  </data>
  <data name="LABEL_SOURCE_FILES" xml:space="preserve">
    <value>_Source files:</value>
  </data>
  <data name="LABEL_STARTED_AT" xml:space="preserve">
    <value>Started at:</value>
  </data>
  <data name="MENUITEM_EDIT" xml:space="preserve">
    <value>_Edit</value>
  </data>
  <data name="MENUITEM_FILE" xml:space="preserve">
    <value>_File</value>
  </data>
  <data name="MENUITEM_HELP" xml:space="preserve">
    <value>_Help</value>
  </data>
  <data name="MENUITEM_VIEW" xml:space="preserve">
    <value>_View</value>
  </data>
  <data name="OPTION_DAILY" xml:space="preserve">
    <value>_Daily</value>
  </data>
  <data name="OPTION_ENGLISH" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="OPTION_GERMAN" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="OPTION_HOURLY" xml:space="preserve">
    <value>H_ourly</value>
  </data>
  <data name="OPTION_NEVER" xml:space="preserve">
    <value>_Never</value>
  </data>
  <data name="OPTION_SYSTEM" xml:space="preserve">
    <value>System language</value>
  </data>
  <data name="QUESTION_DELETE_BACKUP_COLLECTION_0" xml:space="preserve">
    <value>Do you really want to delete the backup '{0}'?</value>
  </data>
  <data name="TEXT_ADD_DESTINATION_DIRECTORY" xml:space="preserve">
    <value>Adding destination directory...</value>
  </data>
  <data name="TEXT_ADD_SOURCE_FILES_FROM_DIRECTORY" xml:space="preserve">
    <value>Adding source files from directory...</value>
  </data>
  <data name="TEXT_AUTOMATIC_BACKUP_0" xml:space="preserve">
    <value>Performing scheduled backup '{0}'...</value>
  </data>
  <data name="TEXT_COPYRIGHT" xml:space="preserve">
    <value>Copyright 2020 Niels Stockfleth

This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.</value>
  </data>
  <data name="TEXT_DESTINATION_FILES_0" xml:space="preserve">
    <value>{0} destination files.</value>
  </data>
  <data name="TEXT_DESTINATION_FILES_SELECTED_0_1" xml:space="preserve">
    <value>{0} destination file of {1} selected.</value>
  </data>
  <data name="TEXT_DESTINATION_FILE_0" xml:space="preserve">
    <value>{0} destination file.</value>
  </data>
  <data name="TEXT_DESTINATION_FILE_SELECTED_0_1" xml:space="preserve">
    <value>{0} destination file of {1} selected.</value>
  </data>
  <data name="TEXT_ERROR_OCCURRED_0" xml:space="preserve">
    <value>An error occurred. {0}</value>
  </data>
  <data name="TEXT_FILTERING_SOURCE_FILES" xml:space="preserve">
    <value>Applying patterns for source files...</value>
  </data>
  <data name="TEXT_LOAD_BACKUP_COLLECTION" xml:space="preserve">
    <value>Loading backup...</value>
  </data>
  <data name="TEXT_REMOVE_DESTINATION_DIRECTORY" xml:space="preserve">
    <value>Removing destination directory...</value>
  </data>
  <data name="TEXT_REMOVE_SOURCE_FILES" xml:space="preserve">
    <value>Removing source files...</value>
  </data>
  <data name="TEXT_RESTART_REQUIRED" xml:space="preserve">
    <value>A restart is required to take effect of the changes.</value>
  </data>
  <data name="TEXT_RUN_BACKUP_COLLECTION" xml:space="preserve">
    <value>Performing backup...</value>
  </data>
  <data name="TEXT_SOURCE_FILES_0_1" xml:space="preserve">
    <value>{0} source files. Total {1}.</value>
  </data>
  <data name="TEXT_SOURCE_FILES_SELECTED_0_1_2" xml:space="preserve">
    <value>{0} source files of {1} selected. Total {2}.</value>
  </data>
  <data name="TEXT_SOURCE_FILE_0_1" xml:space="preserve">
    <value>{0} source file. Total {1}.</value>
  </data>
  <data name="TEXT_SOURCE_FILE_SELECTED_0_1_2" xml:space="preserve">
    <value>{0} source file of {1} selected.Total {2}.</value>
  </data>
  <data name="TEXT_UPDATE_SOURCE_FILES_FROM_DIRECTORY" xml:space="preserve">
    <value>Updating source files from source directory...</value>
  </data>
  <data name="TITLE_ADD_DESTINATION_DIRECTORY" xml:space="preserve">
    <value>Add destination directory</value>
  </data>
  <data name="TITLE_ADD_SOURCE_DIRECTORY" xml:space="preserve">
    <value>Add source files from directory</value>
  </data>
  <data name="TITLE_ADD_SOURCE_FILE" xml:space="preserve">
    <value>Add source file</value>
  </data>
  <data name="TITLE_FAILURES_0" xml:space="preserve">
    <value>Myna Backup - Failures for backup '{0}'</value>
  </data>
  <data name="TITLE_NEW_BACKUP_COLLECTION" xml:space="preserve">
    <value>Create new backup</value>
  </data>
  <data name="TITLE_OVERVIEW" xml:space="preserve">
    <value>Myna Backup - Overview</value>
  </data>
  <data name="TITLE_RENAME_BACKUP_COLLECTION" xml:space="preserve">
    <value>Rename backup</value>
  </data>
  <data name="TITLE_SELECT_SOURCE_DIRECTORY" xml:space="preserve">
    <value>Select source directory</value>
  </data>
  <data name="TITLE_SETTINGS" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="TOOLTIP_ADD_DESTINATION_DIRECTORY" xml:space="preserve">
    <value>Add destination directory</value>
  </data>
  <data name="TOOLTIP_ADD_SOURCE_DIRECTORY" xml:space="preserve">
    <value>Add source files from directory</value>
  </data>
  <data name="TOOLTIP_ADD_SOURCE_FILE" xml:space="preserve">
    <value>Add source file</value>
  </data>
  <data name="TOOLTIP_BACKUP" xml:space="preserve">
    <value>Perform backup</value>
  </data>
  <data name="TOOLTIP_REMOVE_DESTINATION_DIRECTORY" xml:space="preserve">
    <value>Remove destination directory</value>
  </data>
  <data name="TOOLTIP_REMOVE_SOURCE_FILE" xml:space="preserve">
    <value>Remove source file</value>
  </data>
</root>